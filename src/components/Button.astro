---
const { list } = Astro.props;
---

<!-- Wrap the component elements in our custom element “astro-heart”. -->
<randomize-button  data-list={JSON.stringify(list)}>
    <span></span>
    <button class="mt-3 focus:outline-none text-white bg-purple-700 hover:bg-purple-800 focus:ring-4 focus:ring-purple-300 font-medium rounded-lg text-sm px-5 py-2.5 mb-2 dark:bg-purple-600 dark:hover:bg-purple-700 dark:focus:ring-purple-900" aria-label="Heart">
        Randomize
    </button> 
   
</randomize-button>
  
  <script>
    // Define the behaviour for our new type of HTML element.
    class Randomizer extends HTMLElement {
      constructor() {
        super();
  
        const randomButton = this.querySelector('button');
        const displaySpan = this.querySelector('span');
        const list = JSON.parse(this.dataset.list);
        // Each time the button is clicked, update the count.
        randomButton.addEventListener('click', () => {
            const randomItem = list[Math.floor(Math.random()*list.length)];
            displaySpan.textContent = randomItem.name;
        });
      }
    }
  
    customElements.define('randomize-button', Randomizer);
  </script>